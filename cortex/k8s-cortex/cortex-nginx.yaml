kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx
data:
  nginx.conf: |-
    worker_processes  5;  ## Default: 1
    error_log  /dev/stderr;
    pid        /tmp/nginx.pid;
    worker_rlimit_nofile 8192;

    events {
      worker_connections  4096;  ## Default: 1024
    }

    http {
      default_type application/octet-stream;
      log_format   main '$remote_addr - $remote_user [$time_local]  $status '
        '"$request" $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';
      access_log   /dev/stderr  main;
      sendfile     on;
      tcp_nopush   on;
      resolver kube-dns.kube-system.svc.cluster.local;

      server { # simple reverse-proxy
        listen 80;
        proxy_set_header X-Scope-OrgID 0;

        location = /api/v1/push {
          proxy_pass      http://distributor.monitoring.svc.cluster.local$request_uri;
        }
        
        location = /api/prom/push {
          proxy_pass      http://distributor.monitoring.svc.cluster.local$request_uri;
        }

        location = /ring {
          proxy_pass      http://distributor.monitoring.svc.cluster.local$request_uri;
        }
        location = /all_user_stats {
          proxy_pass      http://distributor.monitoring.svc.cluster.local$request_uri;
        }
        
        location ~ /prometheus/.* {
          proxy_pass      http://query-frontend.monitoring.svc.cluster.local$request_uri;
        }

        location ~ /api/prom/.* {
          proxy_pass      http://query-frontend.monitoring.svc.cluster.local$request_uri;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      labels:
        name: nginx
      annotations:
        prometheus.io.scrape: "false"
    spec:
      containers:
      - name: nginx
        image: nginx
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 80
        volumeMounts:
        - name: config-volume
          mountPath: /etc/nginx
      volumes:
        - name: config-volume
          configMap:
            name: nginx
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  ports:
  - name: http
    port: 80
  selector:
    name: nginx
    
