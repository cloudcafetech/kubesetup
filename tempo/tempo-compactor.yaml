apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: compactor
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/name: tempo
  name: tempo-compactor
spec:
  minReadySeconds: 10
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: compactor
      app.kubernetes.io/instance: tempo
      app.kubernetes.io/name: tempo
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: compactor
        app.kubernetes.io/instance: tempo
        app.kubernetes.io/name: tempo
        tempo-gossip-member: "true"
    spec:
      containers:
      - args:
        - -target=compactor
        - -config.file=/conf/tempo.yaml
        - -mem-ballast-size-mbs=1024
        image: docker.io/grafana/tempo:1.0.0
        imagePullPolicy: IfNotPresent
        name: compactor
        ports:
        - containerPort: 3100
          name: http
          protocol: TCP
        - containerPort: 7946
          name: http-memberlist
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /conf
          name: tempo-conf
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: tempo
      serviceAccountName: tempo
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: tempo
        name: tempo-conf
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: compactor
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/name: tempo
  name: tempo-compactor
spec:
  ports:
  - name: http
    port: 3100
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: compactor
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/name: tempo
  sessionAffinity: None
  type: ClusterIP
