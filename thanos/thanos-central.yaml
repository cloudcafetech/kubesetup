apiVersion: v1
kind: ConfigMap
metadata:
  name: thanos-minio-credentials
  namespace: monitoring
data:
  minios3.yml: |-
    type: S3
    config:
      endpoint: 172.31.39.182:9000
      bucket: thanos
      access_key: admin
      secret_key: admin2675
      insecure: true
      signature_version2: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-querier
  namespace: monitoring
  labels:
    app: thanos-querier
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thanos-querier
  template:
    metadata:
      labels:
        app: thanos-querier
    spec:
      containers:
      - name: thanos
        #image: quay.io/thanos/thanos:v0.8.0
        image: quay.io/thanos/thanos:v0.19.0
        args:
        - query
        - --log.level=debug
        - --query.replica-label=replica
        - --store=dnssrv+thanos-store-gateway:10901
        ports:
        - name: http
          containerPort: 10902
        - name: grpc
          containerPort: 10901
        livenessProbe:
          httpGet:
            port: http
            path: /-/healthy
        readinessProbe:
          httpGet:
            port: http
            path: /-/ready
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: thanos-querier
  name: thanos-querier
  namespace: monitoring
spec:
  ports:
  - port: 9090
    protocol: TCP
    targetPort: http
    name: http
  selector:
    app: thanos-querier
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: thanos-store-gateway
  namespace: monitoring
  labels:
    app: thanos-store-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thanos-store-gateway
      thanos-store-api: "true"
  serviceName: thanos-store-gateway
  template:
    metadata:
      labels:
        app: thanos-store-gateway
        thanos-store-api: "true"
    spec:
      containers:
        - name: thanos
          #image: quay.io/thanos/thanos:v0.8.0
          image: quay.io/thanos/thanos:v0.19.0
          args:
          - "store"
          - "--log.level=debug"
          - "--data-dir=/data"
          - "--objstore.config-file=/etc/secret/minios3.yml"
          - "--index-cache-size=500MB"
          - "--chunk-pool-size=500MB"
          ports:
          - name: http
            containerPort: 10902
          - name: grpc
            containerPort: 10901
          livenessProbe:
            httpGet:
              port: 10902
              path: /-/healthy
          readinessProbe:
            httpGet:
              port: 10902
              path: /-/ready
          volumeMounts:
            - name: thanos-minio-credentials
              mountPath: /etc/secret
              readOnly: false
      volumes:
        - name: thanos-minio-credentials
          configMap:
            defaultMode: 420
            name: thanos-minio-credentials
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: thanos-compactor
  namespace: monitoring
  labels:
    app: thanos-compactor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thanos-compactor
  serviceName: thanos-compactor
  template:
    metadata:
      labels:
        app: thanos-compactor
    spec:
      containers:
        - name: thanos
          #image: quay.io/thanos/thanos:v0.8.0
          image: quay.io/thanos/thanos:v0.19.0
          args:
            - "compact"
            - "--log.level=debug"
            - "--data-dir=/data"
            - "--objstore.config-file=/etc/secret/minios3.yml"
            - "--wait"
          ports:
            - name: http
              containerPort: 10902
          livenessProbe:
            httpGet:
              port: 10902
              path: /-/healthy
          readinessProbe:
            httpGet:
              port: 10902
              path: /-/ready
          volumeMounts:
            - name: thanos-minio-credentials
              mountPath: /etc/secret
              readOnly: false
      volumes:
        - name: thanos-minio-credentials
          configMap:
            defaultMode: 420
            name: thanos-minio-credentials
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: thanos-ruler
  namespace: monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: thanos-ruler-configmap
  namespace: monitoring
data:
  ruler.yml: |-
    groups:
      - name: "centralmonitoring"
        rules:
          - alert: "PrometheusDown"
            expr: sum(up{cluster!="", instance=~"prometheus.*", job="kubernetes-service-endpoints"}) by (cluster) < 3
          - alert: "TooManyPods"
            expr: sum(kubelet_running_pods) > 15
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: thanos-ruler
  name: thanos-ruler
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thanos-ruler
      thanos-store-api: "true"
  serviceName: thanos-ruler
  template:
    metadata:
      labels:
        app: thanos-ruler
        thanos-store-api: "true"
    spec:
      containers:
      - args:
        - rule
        - --log.level=info
        - --log.format=logfmt
        - --grpc-address=0.0.0.0:10901
        - --http-address=0.0.0.0:10902
        - --data-dir=/data
        - --eval-interval=1m
        - --alertmanagers.url=http://alertmanager.monitoring.svc.cluster.local:9093
        - --query=dnssrv+_http._tcp.thanos-querier.monitoring.svc.cluster.local
        - --label=replica="$(POD_NAME)"
        - --label=central_cluster="kind-cluster"
        - --alert.label-drop=replica
        - --objstore.config-file=/conf/objstore/minios3.yml
        - --rule-file=/conf/rules/ruler.yml
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        #image: docker.io/bitnami/thanos:0.19.0-scratch-r0
        image: quay.io/thanos/thanos:v0.19.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/healthy
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        name: ruler
        ports:
        - containerPort: 10902
          name: http
          protocol: TCP
        - containerPort: 10901
          name: grpc
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/ready
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        volumeMounts:
        - mountPath: /conf/rules
          name: ruler-config
        - mountPath: /conf/objstore
          name: thanos-minio-credentials
        - mountPath: /data
          name: data
      serviceAccount: thanos-ruler
      serviceAccountName: thanos-ruler
      volumes:
      - name: data
        emptyDir: {}
      - configMap:
          defaultMode: 420
          name: thanos-ruler-configmap
        name: ruler-config
      - configMap:
          defaultMode: 420
          name: thanos-minio-credentials
        name: thanos-minio-credentials
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: thanos-ruler
  name: thanos-ruler
  namespace: monitoring
spec:
  ports:
    - port: 9090
      protocol: TCP
      targetPort: http
      name: http
  selector:
    app: thanos-ruler
